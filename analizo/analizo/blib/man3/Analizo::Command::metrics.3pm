.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Analizo::Command::metrics 3pm"
.TH Analizo::Command::metrics 3pm "2024-01-25" "perl v5.34.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
analizo\-metrics \- analizo's metric reporting tool
.SH "USAGE"
.IX Header "USAGE"
.Vb 1
\&  analizo metrics [OPTIONS] [<input>]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
analizo metrics analyzes source code in \fIinput\fR and produces a metrics
report. If \fIinput\fR is omitted, the current directory (\fI.\fR) is assumed.
.PP
The produced report is written to the standard output, or to a file using the
\&\fI\-\-output\fR option, using the \s-1YAML\s0 format (see \fIhttp://www.yaml.org/\fR)
.PP
analizo metrics is part of the analizo suite.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "<input>" 4
.IX Item "<input>"
Tells analizo which source code directory you want to parse.
.IP "\-\-extractor <extractor>" 4
.IX Item "--extractor <extractor>"
Define which extractor method use to parse the source code. Default is Doxyparse.
.Sp
When using the Doxyparse extractor (default), all files matching the languages
supported by doxyparse are processed, unless \fI\-\-language\fR is used.
.IP "\-\-list, \-l" 4
.IX Item "--list, -l"
Displays metric list.
.IP "\-\-output <file>, \-o <file>" 4
.IX Item "--output <file>, -o <file>"
Writes the output to <file> instead of standard output.
.IP "\-\-globalonly, \-\-global\-only, \-g" 4
.IX Item "--globalonly, --global-only, -g"
Don't output the details about modules: only output global (project-wide) metrics.
.IP "\-\-language <lang>" 4
.IX Item "--language <lang>"
Process only filenames matching known extensions for the <\fIlang\fR> programming
language. To see which languages are supported, pass \fB\-\-language list\fR.
.IP "\-\-exclude <dirs>, \-x <dirs>" 4
.IX Item "--exclude <dirs>, -x <dirs>"
Exclude <\fIdirs\fR> (a colon-separated list of directories) from the analysis.
This is useful, for example, when you want to focus on production code and
exclude test code from the analysis. You could do that by passing something
like pass \fB\-\-exclude test\fR.
.SH "OUTPUT FORMAT"
.IX Header "OUTPUT FORMAT"
The output is a stream of \s-1YAML\s0 documents. The first one presents metrics for
the project as a whole. The subsequent ones present per-module metrics, and thus
there will be as many of them as there are modules in your project.
.SH "COPYRIGHT AND AUTHORS"
.IX Header "COPYRIGHT AND AUTHORS"
See \fB\fBanalizo\fB\|(1)\fR.
